git init
git add <file>
git commit

git暂存区
位于版本库和工作区之间的一个阶段。通过git add之后还没有commit的文件会添加到暂存区

git diff HEAD: 比较工作区和版本库里的文件的差异
git diff --cached或git diff --staged: 比较暂存区和版本库里的文件的差异

commit提交的永远是暂存区里的数据

.git/index里存的是暂存区的文件索引目录树，所有对象都存在.git/objects里。
HEAD是个游标，和master等效。当add时，index里存的信息会被更新；当commit时，index里存的目录树会被更新到master分支。

git ls-tree列出版本库中的目录树
git ls-files列出暂存区中的目录树

git stash暂时保存工作区和暂存区的状态，并且清空。（apply恢复进度；pop弹出进度并恢复到当前）
git log显示提交日志。--decorate能显示里程碑

git cat-file显示git对象的信息

git branch分支管理

git reset移动HEAD游标。--hard重置引用指向、暂存区、工作区，--mixed（或空）重置引用指向、暂存区，--soft重置引用指向
^表示父节点。如HEAD^表示master分支上的前一次提交

git reflog显示操作日志

git tag里程碑

git describe显示最近版本号

git fetch从远程repo取回数据
git pull从远程repo取回数据，并合并到当前分支

git checkout <commit> -- <file>
从暂存区检出文件到工作区。
git checkout <branch>
切换分支。注意，所有修改必须已经commit，否则默认参数下会报错提醒。

git merge <branch>
合并分支。将HEAD合并到<branch>分支上。如果HEAD是<branch>的直接上游，只需简单移动HEAD指针即可，即所谓的fast forward。
-d 删除分支

git rebase --onto master server client
检出client分支，找出client和server分支的共同祖先，并在master上重演一遍。

git push origin :branch_you_want_to_delete
删除远程分支。就是把一个空的分支赋值给已经存在的分支，这样就能删除了
